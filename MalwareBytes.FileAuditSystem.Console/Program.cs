using System;
using System.Diagnostics;
using System.Diagnostics.Eventing.Reader;

namespace MalwareBytes.FileAuditSystem.Console
{
    internal class Program
    {
        static void Main(string[] args)
        {
            if (args is null) throw new ArgumentNullException(nameof(args));

            //LoadEventLogs();
            LoadEvent();

            System.Console.ReadKey();
        }

        private static void LoadEvent()
        {
            EventLog eventLog = new EventLog("Security", ".");
            eventLog.EnableRaisingEvents = true;
            eventLog.EntryWritten+= new EntryWrittenEventHandler(OnEntryWritten);
        }

        public static void LoadEventLogs()
        {
            string path = @"C:\Users\Asus\Desktop\Myself\MalwareBytes\FirstFolder";
            EventLogSession session = new EventLogSession();
            //string query = $"*[EventData[Data[@Name='ObjectName']='{path}']] and *[System[EventID= '4663']]";
            string query = $"*[System[EventID= '4663']]";
            EventLogQuery eventsQuery = new EventLogQuery("Security", PathType.LogName, query)
            {
                TolerateQueryErrors = true,
                Session = session
            };

            EventLogWatcher logWatcher = new EventLogWatcher(eventsQuery);
            logWatcher.EventRecordWritten += new EventHandler<EventRecordWrittenEventArgs>(onWatching);
            logWatcher.Enabled = true;
        }

        private static void onWatching(object sender, EventRecordWrittenEventArgs e)
        {
            var time = e.EventRecord.TimeCreated;
            var id = e.EventRecord.Id;
            var logname = e.EventRecord.LogName;
            var level = e.EventRecord.Level;
            var task = e.EventRecord.TaskDisplayName;
            var opCode = e.EventRecord.OpcodeDisplayName;
            var mname = e.EventRecord.MachineName;
            var processId = e.EventRecord.ProcessId;


            System.Console.WriteLine($@"{time}, {id}, {logname}, {level}, {task}, {opCode}, {mname}, {processId}");
        }

        public static void OnEntryWritten(object source,
                                  EntryWrittenEventArgs entryArg)
        {
            if (entryArg.Entry.EntryType == EventLogEntryType.SuccessAudit)
            {
                System.Console.WriteLine(entryArg.Entry.Message);
                System.Console.WriteLine(entryArg.Entry.Category);
                System.Console.WriteLine(entryArg.Entry.EntryType.ToString());
                // Do further actions here as necessary...
            }
        }
    }
}
