using MalwareBytes.FileAuditSystem.Domain.Entity;
using MalwareBytes.FileAuditSystem.Service.Abstract;
using System.Diagnostics.Eventing.Reader;
using System.IO;
using System.Threading.Tasks;

namespace MalwareBytes.FileAuditSystem.Service.EventHandlers
{
    public class ValidatingAuditEventHandler : AuditEventHandler
    {
        public async override Task HandleRequest(EventEntity eventEntity)
        {
            if (EventArgs?.EventRecord == null)
            {
                throw new EventLogException("Event could not be found !");
            }

            if (EventArgs.EventException != null)
            {
                throw EventArgs.EventException;
            }

            if (string.IsNullOrWhiteSpace(LogFilePath) || !File.Exists(LogFilePath))
            {
                throw new EventLogException($"{LogFilePath} could not detected !");
            }

            var fileName = EventArgs.EventRecord.Properties[6].Value.ToString();
            if (Directory.GetParent(fileName).FullName == eventEntity.FolderPath)
            {
                await _nextHandler?.HandleRequest(eventEntity);
            }
        }
    }
}
