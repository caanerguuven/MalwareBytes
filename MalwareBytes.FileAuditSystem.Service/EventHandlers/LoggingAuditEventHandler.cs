using MalwareBytes.FileAuditSystem.Domain.Entity;
using MalwareBytes.FileAuditSystem.Service.Abstract;
using System.Diagnostics.Eventing.Reader;
using System.IO;
using System.Threading.Tasks;

namespace MalwareBytes.FileAuditSystem.Service.EventHandlers
{
    public class LoggingAuditEventHandler : AuditEventHandler
    {
        private readonly string _logFilePath;

        public LoggingAuditEventHandler(string logFilePath) => _logFilePath = logFilePath;

        public async override Task HandleRequest(EventRecordWrittenEventArgs source, EventEntity target)
        {
            if (string.IsNullOrWhiteSpace(_logFilePath) || !File.Exists(_logFilePath))
            {
                throw new System.Exception($"{_logFilePath} could not detected !");
            }

            var log = target.GetJSONFormatString();

            using StreamWriter file = new StreamWriter(_logFilePath, append: true);
            await file.WriteLineAsync(log);

            if (_nextHandler != null)
            {
                await _nextHandler.HandleRequest(source, target);
            }

        }
    }
}
